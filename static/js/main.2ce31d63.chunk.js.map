{"version":3,"sources":["actions/types.js","api/api.js","actions/todoActions.js","api/helpers.js","components/TodoItem.jsx","components/TodoUser.jsx","components/TodoList.jsx","reducers/todoReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["TODO","URL","fetchTodos","dispatch","type","setTimeout","Promise","all","fetch","concat","then","res","json","response","_response","Object","slicedToArray","todos","users","map","todo","objectSpread","user","find","id","userId","joinTodosAndUsers","payload","catch","err","error","message","finally","TodoItem","_ref","task","toggleTodo","react_default","a","createElement","Fragment","className","defaultChecked","completed","onChange","title","TodoUser","name","email","FILTER","BY_ID","BY_COMPLETE","BY_TITLE","BY_NAME","BY_EMAIL","TodoList","state","buttonStyle","buttonInnerText","sortField","direction","_direction","defineProperty","handleSort","_this","setState","prevState","assign","sortBy","filterBy","_callbackMap","callbackMap","b","parseFloat","localeCompare","props","sort","_this2","this","_this$state","preparedTodos","isLoaded","onClick","key","components_TodoItem","onSort","components_TodoUser","disabled","isLoading","Component","connect","todoReducer","initialState","arguments","length","undefined","action","newTodos","rootReducer","combineReducers","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","apply","App","es","components_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"8RAAaA,EACJ,QADIA,EAEG,SAFHA,EAGA,YAHAA,EAIE,cAJFA,EAKC,aCLRC,EAAM,8CCICC,EAAa,kBAAM,SAAAC,GAC9BA,EAAS,CAAEC,KAAMJ,IAGjBK,WAAW,WACTC,QAAQC,IAAI,CDNPC,MAAK,GAAAC,OAAIR,EAAJ,WAAiBS,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAItCJ,MAAK,GAAAC,OAAIR,EAAJ,WAAiBS,KAAK,SAAAC,GAAG,OAAIA,EAAIC,WCGxCF,KAAK,SAAAG,GAAY,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CACOF,EADP,GAGhB,OCbyB,SAACI,EAAOC,GACvC,OAAOD,EAAME,IAAI,SAAAC,GAAI,OAAAL,OAAAM,EAAA,EAAAN,CAAA,GAChBK,EADgB,CAEnBE,KAAMJ,EAAMK,KAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAOJ,EAAKK,aDSVC,CAFZZ,EAAA,GAAAA,EAAA,MAKjBJ,KAAK,SAAAO,GACJd,EAAS,CACPC,KAAMJ,EACN2B,QAASV,IAGXd,EAAS,CAAEC,KAAMJ,MAElB4B,MAAM,SAAAC,GACL1B,EAAS,CACPC,KAAMJ,EACN8B,MAAOD,EAAIE,YAGdC,QAAQ7B,EAAS,CAAEC,KAAMJ,MAC3B,QETUiC,EAnBE,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,WACxB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAaN,EAAKX,IAChCa,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACZJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,iBACVrC,KAAK,WACLsC,eAAgBP,EAAKQ,UACrBC,SAAU,WACRR,EAAWD,EAAKX,QAItBa,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAaN,EAAKU,SCLvBC,EATE,SAAAZ,GAAc,IAAXZ,EAAWY,EAAXZ,KAClB,OACEe,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAanB,EAAKyB,MAChCV,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAanB,EAAK0B,SCChCC,EAAS,CACbC,MAAO,KACPC,YAAa,YACbC,SAAU,QACVC,QAAS,OACTC,SAAU,SAGNC,+MACJC,MAAQ,CACNC,YAAa,GACbC,gBAAiB,gDACjBC,UAAWV,EAAOC,MAClBU,WAASC,EAAA,GAAA9C,OAAA+C,EAAA,EAAA/C,CAAA8C,EACNZ,EAAOC,MAAQ,OADTnC,OAAA+C,EAAA,EAAA/C,CAAA8C,EAENZ,EAAOE,YAAc,OAFfpC,OAAA+C,EAAA,EAAA/C,CAAA8C,EAGNZ,EAAOG,SAAW,OAHZrC,OAAA+C,EAAA,EAAA/C,CAAA8C,EAINZ,EAAOI,QAAU,OAJXtC,OAAA+C,EAAA,EAAA/C,CAAA8C,EAKNZ,EAAOK,SAAW,OALZO,MASXE,WAAa,SAAAJ,GACXK,EAAKC,SAAS,SAAAC,GACZ,MAAO,CACLP,YACAC,UAAW7C,OAAOoD,OAAOD,EAAUN,UAAxB7C,OAAA+C,EAAA,EAAA/C,CAAA,GACR4C,EAA+C,QAAnCO,EAAUN,UAAUD,GAAuB,OAAS,cAMzES,OAAS,SAAAC,GAAY,IAAAC,EACbC,GAAWD,EAAA,GAAAvD,OAAA+C,EAAA,EAAA/C,CAAAuD,EACdrB,EAAOC,MAAQ,SAACZ,EAAGkC,GAClB,MAA0C,QAAnCR,EAAKR,MAAMI,UAAUS,GACxBI,WAAWnC,EAAEd,IAAMiD,WAAWD,EAAEhD,IAChCiD,WAAWD,EAAEhD,IAAMiD,WAAWnC,EAAEd,MAJvBT,OAAA+C,EAAA,EAAA/C,CAAAuD,EAOdrB,EAAOE,YAAc,SAACb,EAAGkC,GACxB,MAA0C,QAAnCR,EAAKR,MAAMI,UAAUS,GACxB/B,EAAEK,UAAY6B,EAAE7B,UAChB6B,EAAE7B,UAAYL,EAAEK,YAVP5B,OAAA+C,EAAA,EAAA/C,CAAAuD,EAYdrB,EAAOG,SAAW,SAACd,EAAGkC,GACrB,MAA0C,QAAnCR,EAAKR,MAAMI,UAAUS,GACxB/B,EAAEO,MAAM6B,cAAcF,EAAE3B,OACxB2B,EAAE3B,MAAM6B,cAAcpC,EAAEO,SAff9B,OAAA+C,EAAA,EAAA/C,CAAAuD,EAiBdrB,EAAOI,QAAU,SAACf,EAAGkC,GACpB,MAA0C,QAAnCR,EAAKR,MAAMI,UAAUS,GACxB/B,EAAEhB,KAAKyB,KAAK2B,cAAcF,EAAElD,KAAKyB,MACjCyB,EAAElD,KAAKyB,KAAK2B,cAAcpC,EAAEhB,KAAKyB,QApBxBhC,OAAA+C,EAAA,EAAA/C,CAAAuD,EAsBdrB,EAAOK,SAAW,SAAChB,EAAGkC,GACrB,MAA0C,QAAnCR,EAAKR,MAAMI,UAAUS,GACxB/B,EAAEhB,KAAK0B,MAAM0B,cAAcF,EAAElD,KAAK0B,OAClCwB,EAAElD,KAAK0B,MAAM0B,cAAcpC,EAAEhB,KAAK0B,SAzBzBsB,GA+BjB,OAFaN,EAAKW,MAAM1D,OAAS,IAErB2D,KAAKL,EAAYF,6EAGtB,IAAAQ,EAAAC,KAAAC,EAC6CD,KAAKtB,MAAjDG,EADDoB,EACCpB,UAAWD,EADZqB,EACYrB,gBAEbsB,GAHCD,EAC6BtB,YAEdqB,KAAKV,OAAOT,IAElC,OACEtB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGsC,KAAKH,MAAMM,SACV5C,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACZJ,EAAAC,EAAAC,cAAA,MACEE,UAAU,YACVyC,QAAS,kBAAML,EAAKd,WAAWd,EAAOC,SAFxC,MAMAb,EAAAC,EAAAC,cAAA,MACEE,UAAU,YACVyC,QAAS,kBAAML,EAAKd,WAAWd,EAAOE,gBAExCd,EAAAC,EAAAC,cAAA,MACEE,UAAU,YACVyC,QAAS,kBAAML,EAAKd,WAAWd,EAAOG,YAFxC,SAMAf,EAAAC,EAAAC,cAAA,MACEE,UAAU,YACVyC,QAAS,kBAAML,EAAKd,WAAWd,EAAOI,WAFxC,QAMAhB,EAAAC,EAAAC,cAAA,MACEE,UAAU,YACVyC,QAAS,kBAAML,EAAKd,WAAWd,EAAOK,YAFxC,WAQJjB,EAAAC,EAAAC,cAAA,aACGyC,EAAc7D,IAAI,SAAAgB,GACjB,OACEE,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAY0C,IAAKhD,EAAKX,IAClCa,EAAAC,EAAAC,cAAC6C,EAAD,CACEjD,KAAMA,EACNkD,OAAQR,EAAKd,WACb3B,WAAYyC,EAAKF,MAAMvC,aAEzBC,EAAAC,EAAAC,cAAC+C,EAAD,CAAUhE,KAAMa,EAAKb,YAO/Be,EAAAC,EAAAC,cAAA,UACEE,UACEqC,KAAKH,MAAM7C,MAAQ,wBAA0B,mBAE/CoD,QAASJ,KAAKH,MAAMzE,WACpBqF,WAAUT,KAAKH,MAAMa,WAEnBV,KAAKH,MAAM7C,MAA0BgD,KAAKH,MAAM7C,MAA7B4B,WA5HV+B,aAgJRC,cAZS,SAAAlC,GAAK,MAAK,CAChCvC,MAAOuC,EAAMmC,YAAY1E,MACzBgE,SAAUzB,EAAMmC,YAAYV,SAC5BO,UAAWhC,EAAMmC,YAAYH,UAC7B1D,MAAO0B,EAAMmC,YAAY7D,QAGA,SAAA3B,GAAQ,MAAK,CACtCD,WAAY,kBAAMC,EAASD,MAC3BkC,WAAY,SAAAZ,GAAE,OAAIrB,EJ3HM,SAAAqB,GAAE,MAAK,CAC/BpB,KAAMJ,EACNwB,MIyH2BY,CAAWZ,OAGzBkE,CAGbnC,kBChKIqC,EAAe,CACnB3E,MAAO,GACPa,MAAO,KACPmD,UAAU,EACVO,WAAW,GAuBEG,EApBK,WAAuC,IAA9BnC,EAA8BqC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBD,EAAcI,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzD,OAAQC,EAAO5F,MACb,KAAKJ,EACH,OAAOe,OAAAM,EAAA,EAAAN,CAAA,GAAKyC,EAAZ,CAAmBvC,MAAO+E,EAAOrE,UACnC,KAAK3B,EACH,IAAMiG,EAAWzC,EAAMvC,MAAME,IAAI,SAAAC,GAAI,OACnCA,EAAKI,KAAOwE,EAAOxE,GAAnBT,OAAAM,EAAA,EAAAN,CAAA,GAA6BK,EAA7B,CAAmCuB,WAAYvB,EAAKuB,YAAcvB,IAEpE,OAAOL,OAAAM,EAAA,EAAAN,CAAA,GAAKyC,EAAZ,CAAmBvC,MAAOgF,IAC5B,KAAKjG,EACH,OAAOe,OAAAM,EAAA,EAAAN,CAAA,GAAKyC,EAAZ,CAAmByB,UAAWzB,EAAMyB,WACtC,KAAKjF,EACH,OAAOe,OAAAM,EAAA,EAAAN,CAAA,GAAKyC,EAAZ,CAAmBgC,WAAYhC,EAAMgC,YACvC,KAAKxF,EACH,OAAOe,OAAAM,EAAA,EAAAN,CAAA,GAAKyC,EAAZ,CAAmB1B,MAAOkE,EAAOlE,QACnC,QACE,OAAO0B,IClBE0C,EAJKC,0BAAgB,CAClCR,wBCCIS,EAAc,CAACC,KAONC,EALDC,sBACZL,EACAM,8BAAoBC,kBAAeC,WAAf,EAAmBN,KCS1BO,MAVf,WACE,OACEtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAUN,MAAOA,GACfjE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACsE,EAAD,SCPRC,IAASC,OAAO1E,EAAAC,EAAAC,cAACyE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.2ce31d63.chunk.js","sourcesContent":["export const TODO = {\n  FETCH: 'FETCH',\n  IS_COMPLETED: 'TOGGLE',\n  IS_LOADED: 'IS_LOADED',\n  FETCH_ERROR: 'FETCH_ERROR',\n  IS_LOADING: 'IS_LOADING'\n};\n","const URL = 'https://jsonplaceholder.typicode.com';\r\n\r\nexport const getTodos = () => {\r\n  return fetch(`${URL}/todos`).then(res => res.json());\r\n};\r\n\r\nexport const getUsers = () => {\r\n  return fetch(`${URL}/users`).then(res => res.json());\r\n};\r\n","import { TODO } from './types';\nimport { getTodos, getUsers } from '../api/api';\nimport { joinTodosAndUsers } from '../api/helpers';\n\nexport const fetchTodos = () => dispatch => {\n  dispatch({ type: TODO.IS_LOADING });\n\n  // That setTimeout - response simulation\n  setTimeout(() => {\n    Promise.all([getTodos(), getUsers()])\n      .then(response => {\n        const [todos, users] = response;\n        const joinedTodosAndUsers = joinTodosAndUsers(todos, users);\n        return joinedTodosAndUsers;\n      })\n      .then(todos => {\n        dispatch({\n          type: TODO.FETCH,\n          payload: todos\n        });\n        \n        dispatch({ type: TODO.IS_LOADED });\n      })\n      .catch(err => {\n        dispatch({\n          type: TODO.FETCH_ERROR,\n          error: err.message\n        });\n      })\n      .finally(dispatch({ type: TODO.IS_LOADING }));\n  }, 1444);\n};\n\nexport const toggleTodo = id => ({\n  type: TODO.IS_COMPLETED,\n  id\n});\n","export const joinTodosAndUsers = (todos, users) => {\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId)\n  }));\n};\n","import React from 'react';\r\n\r\nconst TodoItem = ({ task, toggleTodo }) => {\r\n  return (\r\n    <>\r\n      <td className=\"todos__td\">{task.id}</td>\r\n      <td className=\"todos__td\">\r\n        <input\r\n          className=\"todo__checkbox\"\r\n          type=\"checkbox\"\r\n          defaultChecked={task.completed}\r\n          onChange={() => {\r\n            toggleTodo(task.id);\r\n          }}\r\n        />\r\n      </td>\r\n      <td className=\"todos__td\">{task.title}</td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\n\r\nconst TodoUser = ({ user }) => {\r\n  return (\r\n    <>\r\n      <td className=\"todos__td\">{user.name}</td>\r\n      <td className=\"todos__td\">{user.email}</td>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoUser;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchTodos, toggleTodo } from '../actions/todoActions';\r\n\r\nimport TodoItem from './TodoItem';\r\nimport TodoUser from './TodoUser';\r\n\r\nconst FILTER = {\r\n  BY_ID: 'id',\r\n  BY_COMPLETE: 'completed',\r\n  BY_TITLE: 'title',\r\n  BY_NAME: 'name',\r\n  BY_EMAIL: 'email'\r\n};\r\n\r\nclass TodoList extends Component {\r\n  state = {\r\n    buttonStyle: '',\r\n    buttonInnerText: 'Click...( ͡° ͜ʖ ͡°)',\r\n    sortField: FILTER.BY_ID,\r\n    direction: {\r\n      [FILTER.BY_ID]: 'asc',\r\n      [FILTER.BY_COMPLETE]: 'asc',\r\n      [FILTER.BY_TITLE]: 'asc',\r\n      [FILTER.BY_NAME]: 'asc',\r\n      [FILTER.BY_EMAIL]: 'asc'\r\n    }\r\n  };\r\n\r\n  handleSort = sortField => {\r\n    this.setState(prevState => {\r\n      return {\r\n        sortField,\r\n        direction: Object.assign(prevState.direction, {\r\n          [sortField]: prevState.direction[sortField] === 'asc' ? 'desc' : 'asc'\r\n        })\r\n      };\r\n    });\r\n  };\r\n\r\n  sortBy = filterBy => {\r\n    const callbackMap = {\r\n      [FILTER.BY_ID]: (a, b) => {\r\n        return this.state.direction[filterBy] === 'asc'\r\n          ? parseFloat(a.id) - parseFloat(b.id)\r\n          : parseFloat(b.id) - parseFloat(a.id);\r\n      },\r\n\r\n      [FILTER.BY_COMPLETE]: (a, b) => {\r\n        return this.state.direction[filterBy] === 'asc'\r\n          ? a.completed - b.completed\r\n          : b.completed - a.completed;\r\n      },\r\n      [FILTER.BY_TITLE]: (a, b) => {\r\n        return this.state.direction[filterBy] === 'asc'\r\n          ? a.title.localeCompare(b.title)\r\n          : b.title.localeCompare(a.title);\r\n      },\r\n      [FILTER.BY_NAME]: (a, b) => {\r\n        return this.state.direction[filterBy] === 'asc'\r\n          ? a.user.name.localeCompare(b.user.name)\r\n          : b.user.name.localeCompare(a.user.name);\r\n      },\r\n      [FILTER.BY_EMAIL]: (a, b) => {\r\n        return this.state.direction[filterBy] === 'asc'\r\n          ? a.user.email.localeCompare(b.user.email)\r\n          : b.user.email.localeCompare(a.user.email);\r\n      }\r\n    };\r\n\r\n    const data = this.props.todos || [];\r\n\r\n    return data.sort(callbackMap[filterBy]);\r\n  };\r\n\r\n  render() {\r\n    const { sortField, buttonInnerText, buttonStyle } = this.state;\r\n\r\n    const preparedTodos = this.sortBy(sortField);\r\n\r\n    return (\r\n      <>\r\n        {this.props.isLoaded ? (\r\n          <table>\r\n            <thead>\r\n              <tr className=\"todo__row\">\r\n                <th\r\n                  className=\"todos__th\"\r\n                  onClick={() => this.handleSort(FILTER.BY_ID)}\r\n                >\r\n                  Id\r\n                </th>\r\n                <th\r\n                  className=\"todos__th\"\r\n                  onClick={() => this.handleSort(FILTER.BY_COMPLETE)}\r\n                />\r\n                <th\r\n                  className=\"todos__th\"\r\n                  onClick={() => this.handleSort(FILTER.BY_TITLE)}\r\n                >\r\n                  Title\r\n                </th>\r\n                <th\r\n                  className=\"todos__th\"\r\n                  onClick={() => this.handleSort(FILTER.BY_NAME)}\r\n                >\r\n                  Name\r\n                </th>\r\n                <th\r\n                  className=\"todos__th\"\r\n                  onClick={() => this.handleSort(FILTER.BY_EMAIL)}\r\n                >\r\n                  Email\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {preparedTodos.map(task => {\r\n                return (\r\n                  <tr className=\"todo__row\" key={task.id}>\r\n                    <TodoItem\r\n                      task={task}\r\n                      onSort={this.handleSort}\r\n                      toggleTodo={this.props.toggleTodo}\r\n                    />\r\n                    <TodoUser user={task.user} />\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <button\r\n            className={\r\n              this.props.error ? 'loadTodosButton error' : 'loadTodosButton '\r\n            }\r\n            onClick={this.props.fetchTodos}\r\n            disabled={this.props.isLoading ? true : false}\r\n          >\r\n            {!this.props.error ? buttonInnerText : this.props.error}\r\n          </button>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: state.todoReducer.todos,\r\n  isLoaded: state.todoReducer.isLoaded,\r\n  isLoading: state.todoReducer.isLoading,\r\n  error: state.todoReducer.error\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchTodos: () => dispatch(fetchTodos()),\r\n  toggleTodo: id => dispatch(toggleTodo(id))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList);\r\n","import { TODO } from '../actions/types';\n\nconst initialState = {\n  todos: [],\n  error: null,\n  isLoaded: false,\n  isLoading: false\n};\n\nconst todoReducer = function(state = initialState, action) {\n  switch (action.type) {\n    case TODO.FETCH:\n      return { ...state, todos: action.payload };\n    case TODO.IS_COMPLETED:\n      const newTodos = state.todos.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n      return { ...state, todos: newTodos };\n    case TODO.IS_LOADED:\n      return { ...state, isLoaded: !state.isLoaded };\n    case TODO.IS_LOADING:\n      return { ...state, isLoading: !state.isLoading };\n    case TODO.FETCH_ERROR:\n      return { ...state, error: action.error };\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import { combineReducers } from 'redux';\nimport todoReducer from './todoReducer';\n\nconst rootReducer = combineReducers({\n  todoReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst middlewares = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nexport default store;\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\n\nimport TodoList from './components/TodoList';\n\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <TodoList />\n      </div>\n    </Provider> \n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}